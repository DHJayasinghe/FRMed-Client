#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace FacialRecordIdentification.Models
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="FacialRecMgmtDB")]
	public partial class FacialRecMgmtDBDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertPatientProfile(PatientProfile instance);
    partial void UpdatePatientProfile(PatientProfile instance);
    partial void DeletePatientProfile(PatientProfile instance);
    partial void InsertAdmissionsCorePopulated(AdmissionsCorePopulated instance);
    partial void UpdateAdmissionsCorePopulated(AdmissionsCorePopulated instance);
    partial void DeleteAdmissionsCorePopulated(AdmissionsCorePopulated instance);
    partial void InsertPatientCorePopulated(PatientCorePopulated instance);
    partial void UpdatePatientCorePopulated(PatientCorePopulated instance);
    partial void DeletePatientCorePopulated(PatientCorePopulated instance);
    #endregion
		
		public FacialRecMgmtDBDataContext() : 
				base(global::System.Configuration.ConfigurationManager.ConnectionStrings["FacialRecMgmtDBConnectionString"].ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public FacialRecMgmtDBDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public FacialRecMgmtDBDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public FacialRecMgmtDBDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public FacialRecMgmtDBDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<PatientProfile> PatientProfiles
		{
			get
			{
				return this.GetTable<PatientProfile>();
			}
		}
		
		public System.Data.Linq.Table<AdmissionsCorePopulated> AdmissionsCorePopulateds
		{
			get
			{
				return this.GetTable<AdmissionsCorePopulated>();
			}
		}
		
		public System.Data.Linq.Table<LabsCorePopulated> LabsCorePopulateds
		{
			get
			{
				return this.GetTable<LabsCorePopulated>();
			}
		}
		
		public System.Data.Linq.Table<PatientCorePopulated> PatientCorePopulateds
		{
			get
			{
				return this.GetTable<PatientCorePopulated>();
			}
		}
		
		public System.Data.Linq.Table<AdmissionsDiagnosesCorePopulate> AdmissionsDiagnosesCorePopulates
		{
			get
			{
				return this.GetTable<AdmissionsDiagnosesCorePopulate>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PatientProfile")]
	public partial class PatientProfile : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _PatientID;
		
		private string _FirstName;
		
		private string _LastName;
		
		private string _ProfilePicture;
		
		private string _PreCalFaceEncoding;
		
		private System.DateTime _CreatedDate;
		
		private System.Nullable<System.DateTime> _ModifiedDate;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPatientIDChanging(System.Guid value);
    partial void OnPatientIDChanged();
    partial void OnFirstNameChanging(string value);
    partial void OnFirstNameChanged();
    partial void OnLastNameChanging(string value);
    partial void OnLastNameChanged();
    partial void OnProfilePictureChanging(string value);
    partial void OnProfilePictureChanged();
    partial void OnPreCalFaceEncodingChanging(string value);
    partial void OnPreCalFaceEncodingChanged();
    partial void OnCreatedDateChanging(System.DateTime value);
    partial void OnCreatedDateChanged();
    partial void OnModifiedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnModifiedDateChanged();
    #endregion
		
		public PatientProfile()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PatientID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid PatientID
		{
			get
			{
				return this._PatientID;
			}
			set
			{
				if ((this._PatientID != value))
				{
					this.OnPatientIDChanging(value);
					this.SendPropertyChanging();
					this._PatientID = value;
					this.SendPropertyChanged("PatientID");
					this.OnPatientIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FirstName", DbType="VarChar(200) NOT NULL", CanBeNull=false)]
		public string FirstName
		{
			get
			{
				return this._FirstName;
			}
			set
			{
				if ((this._FirstName != value))
				{
					this.OnFirstNameChanging(value);
					this.SendPropertyChanging();
					this._FirstName = value;
					this.SendPropertyChanged("FirstName");
					this.OnFirstNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastName", DbType="VarChar(200) NOT NULL", CanBeNull=false)]
		public string LastName
		{
			get
			{
				return this._LastName;
			}
			set
			{
				if ((this._LastName != value))
				{
					this.OnLastNameChanging(value);
					this.SendPropertyChanging();
					this._LastName = value;
					this.SendPropertyChanged("LastName");
					this.OnLastNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProfilePicture", DbType="VarChar(200) NOT NULL", CanBeNull=false)]
		public string ProfilePicture
		{
			get
			{
				return this._ProfilePicture;
			}
			set
			{
				if ((this._ProfilePicture != value))
				{
					this.OnProfilePictureChanging(value);
					this.SendPropertyChanging();
					this._ProfilePicture = value;
					this.SendPropertyChanged("ProfilePicture");
					this.OnProfilePictureChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PreCalFaceEncoding", DbType="VarChar(MAX)")]
		public string PreCalFaceEncoding
		{
			get
			{
				return this._PreCalFaceEncoding;
			}
			set
			{
				if ((this._PreCalFaceEncoding != value))
				{
					this.OnPreCalFaceEncodingChanging(value);
					this.SendPropertyChanging();
					this._PreCalFaceEncoding = value;
					this.SendPropertyChanged("PreCalFaceEncoding");
					this.OnPreCalFaceEncodingChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreatedDate
		{
			get
			{
				return this._CreatedDate;
			}
			set
			{
				if ((this._CreatedDate != value))
				{
					this.OnCreatedDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedDate = value;
					this.SendPropertyChanged("CreatedDate");
					this.OnCreatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> ModifiedDate
		{
			get
			{
				return this._ModifiedDate;
			}
			set
			{
				if ((this._ModifiedDate != value))
				{
					this.OnModifiedDateChanging(value);
					this.SendPropertyChanging();
					this._ModifiedDate = value;
					this.SendPropertyChanged("ModifiedDate");
					this.OnModifiedDateChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.AdmissionsCorePopulated")]
	public partial class AdmissionsCorePopulated : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _PatientID;
		
		private int _AdmissionID;
		
		private System.DateTime _AdmissionStartDate;
		
		private System.DateTime _AdmissionEndDate;
		
		private EntityRef<PatientCorePopulated> _PatientCorePopulated;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPatientIDChanging(System.Guid value);
    partial void OnPatientIDChanged();
    partial void OnAdmissionIDChanging(int value);
    partial void OnAdmissionIDChanged();
    partial void OnAdmissionStartDateChanging(System.DateTime value);
    partial void OnAdmissionStartDateChanged();
    partial void OnAdmissionEndDateChanging(System.DateTime value);
    partial void OnAdmissionEndDateChanged();
    #endregion
		
		public AdmissionsCorePopulated()
		{
			this._PatientCorePopulated = default(EntityRef<PatientCorePopulated>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PatientID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid PatientID
		{
			get
			{
				return this._PatientID;
			}
			set
			{
				if ((this._PatientID != value))
				{
					if (this._PatientCorePopulated.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPatientIDChanging(value);
					this.SendPropertyChanging();
					this._PatientID = value;
					this.SendPropertyChanged("PatientID");
					this.OnPatientIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AdmissionID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int AdmissionID
		{
			get
			{
				return this._AdmissionID;
			}
			set
			{
				if ((this._AdmissionID != value))
				{
					this.OnAdmissionIDChanging(value);
					this.SendPropertyChanging();
					this._AdmissionID = value;
					this.SendPropertyChanged("AdmissionID");
					this.OnAdmissionIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AdmissionStartDate", DbType="DateTime NOT NULL")]
		public System.DateTime AdmissionStartDate
		{
			get
			{
				return this._AdmissionStartDate;
			}
			set
			{
				if ((this._AdmissionStartDate != value))
				{
					this.OnAdmissionStartDateChanging(value);
					this.SendPropertyChanging();
					this._AdmissionStartDate = value;
					this.SendPropertyChanged("AdmissionStartDate");
					this.OnAdmissionStartDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AdmissionEndDate", DbType="DateTime NOT NULL")]
		public System.DateTime AdmissionEndDate
		{
			get
			{
				return this._AdmissionEndDate;
			}
			set
			{
				if ((this._AdmissionEndDate != value))
				{
					this.OnAdmissionEndDateChanging(value);
					this.SendPropertyChanging();
					this._AdmissionEndDate = value;
					this.SendPropertyChanged("AdmissionEndDate");
					this.OnAdmissionEndDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PatientCorePopulated_AdmissionsCorePopulated", Storage="_PatientCorePopulated", ThisKey="PatientID", OtherKey="PatientID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public PatientCorePopulated PatientCorePopulated
		{
			get
			{
				return this._PatientCorePopulated.Entity;
			}
			set
			{
				PatientCorePopulated previousValue = this._PatientCorePopulated.Entity;
				if (((previousValue != value) 
							|| (this._PatientCorePopulated.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PatientCorePopulated.Entity = null;
						previousValue.AdmissionsCorePopulateds.Remove(this);
					}
					this._PatientCorePopulated.Entity = value;
					if ((value != null))
					{
						value.AdmissionsCorePopulateds.Add(this);
						this._PatientID = value.PatientID;
					}
					else
					{
						this._PatientID = default(System.Guid);
					}
					this.SendPropertyChanged("PatientCorePopulated");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.LabsCorePopulated")]
	public partial class LabsCorePopulated
	{
		
		private System.Guid _PatientID;
		
		private int _AdmissionID;
		
		private string _LabName;
		
		private System.Nullable<double> _LabValue;
		
		private string _LabUnits;
		
		private System.DateTime _LabDateTime;
		
		public LabsCorePopulated()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PatientID", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid PatientID
		{
			get
			{
				return this._PatientID;
			}
			set
			{
				if ((this._PatientID != value))
				{
					this._PatientID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AdmissionID", DbType="Int NOT NULL")]
		public int AdmissionID
		{
			get
			{
				return this._AdmissionID;
			}
			set
			{
				if ((this._AdmissionID != value))
				{
					this._AdmissionID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LabName", DbType="VarChar(250) NOT NULL", CanBeNull=false)]
		public string LabName
		{
			get
			{
				return this._LabName;
			}
			set
			{
				if ((this._LabName != value))
				{
					this._LabName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LabValue", DbType="Float")]
		public System.Nullable<double> LabValue
		{
			get
			{
				return this._LabValue;
			}
			set
			{
				if ((this._LabValue != value))
				{
					this._LabValue = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LabUnits", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string LabUnits
		{
			get
			{
				return this._LabUnits;
			}
			set
			{
				if ((this._LabUnits != value))
				{
					this._LabUnits = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LabDateTime", DbType="DateTime NOT NULL")]
		public System.DateTime LabDateTime
		{
			get
			{
				return this._LabDateTime;
			}
			set
			{
				if ((this._LabDateTime != value))
				{
					this._LabDateTime = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PatientCorePopulated")]
	public partial class PatientCorePopulated : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _PatientID;
		
		private string _PatientGender;
		
		private System.DateTime _PatientDateOfBirth;
		
		private string _PatientRace;
		
		private string _PatientMaritalStatus;
		
		private string _PatientLanguage;
		
		private System.Nullable<double> _PatientPopulationPercentageBelowPoverty;
		
		private EntitySet<AdmissionsCorePopulated> _AdmissionsCorePopulateds;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPatientIDChanging(System.Guid value);
    partial void OnPatientIDChanged();
    partial void OnPatientGenderChanging(string value);
    partial void OnPatientGenderChanged();
    partial void OnPatientDateOfBirthChanging(System.DateTime value);
    partial void OnPatientDateOfBirthChanged();
    partial void OnPatientRaceChanging(string value);
    partial void OnPatientRaceChanged();
    partial void OnPatientMaritalStatusChanging(string value);
    partial void OnPatientMaritalStatusChanged();
    partial void OnPatientLanguageChanging(string value);
    partial void OnPatientLanguageChanged();
    partial void OnPatientPopulationPercentageBelowPovertyChanging(System.Nullable<double> value);
    partial void OnPatientPopulationPercentageBelowPovertyChanged();
    #endregion
		
		public PatientCorePopulated()
		{
			this._AdmissionsCorePopulateds = new EntitySet<AdmissionsCorePopulated>(new Action<AdmissionsCorePopulated>(this.attach_AdmissionsCorePopulateds), new Action<AdmissionsCorePopulated>(this.detach_AdmissionsCorePopulateds));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PatientID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid PatientID
		{
			get
			{
				return this._PatientID;
			}
			set
			{
				if ((this._PatientID != value))
				{
					this.OnPatientIDChanging(value);
					this.SendPropertyChanging();
					this._PatientID = value;
					this.SendPropertyChanged("PatientID");
					this.OnPatientIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PatientGender", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string PatientGender
		{
			get
			{
				return this._PatientGender;
			}
			set
			{
				if ((this._PatientGender != value))
				{
					this.OnPatientGenderChanging(value);
					this.SendPropertyChanging();
					this._PatientGender = value;
					this.SendPropertyChanged("PatientGender");
					this.OnPatientGenderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PatientDateOfBirth", DbType="DateTime NOT NULL")]
		public System.DateTime PatientDateOfBirth
		{
			get
			{
				return this._PatientDateOfBirth;
			}
			set
			{
				if ((this._PatientDateOfBirth != value))
				{
					this.OnPatientDateOfBirthChanging(value);
					this.SendPropertyChanging();
					this._PatientDateOfBirth = value;
					this.SendPropertyChanged("PatientDateOfBirth");
					this.OnPatientDateOfBirthChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PatientRace", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string PatientRace
		{
			get
			{
				return this._PatientRace;
			}
			set
			{
				if ((this._PatientRace != value))
				{
					this.OnPatientRaceChanging(value);
					this.SendPropertyChanging();
					this._PatientRace = value;
					this.SendPropertyChanged("PatientRace");
					this.OnPatientRaceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PatientMaritalStatus", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string PatientMaritalStatus
		{
			get
			{
				return this._PatientMaritalStatus;
			}
			set
			{
				if ((this._PatientMaritalStatus != value))
				{
					this.OnPatientMaritalStatusChanging(value);
					this.SendPropertyChanging();
					this._PatientMaritalStatus = value;
					this.SendPropertyChanged("PatientMaritalStatus");
					this.OnPatientMaritalStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PatientLanguage", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string PatientLanguage
		{
			get
			{
				return this._PatientLanguage;
			}
			set
			{
				if ((this._PatientLanguage != value))
				{
					this.OnPatientLanguageChanging(value);
					this.SendPropertyChanging();
					this._PatientLanguage = value;
					this.SendPropertyChanged("PatientLanguage");
					this.OnPatientLanguageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PatientPopulationPercentageBelowPoverty", DbType="Float")]
		public System.Nullable<double> PatientPopulationPercentageBelowPoverty
		{
			get
			{
				return this._PatientPopulationPercentageBelowPoverty;
			}
			set
			{
				if ((this._PatientPopulationPercentageBelowPoverty != value))
				{
					this.OnPatientPopulationPercentageBelowPovertyChanging(value);
					this.SendPropertyChanging();
					this._PatientPopulationPercentageBelowPoverty = value;
					this.SendPropertyChanged("PatientPopulationPercentageBelowPoverty");
					this.OnPatientPopulationPercentageBelowPovertyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PatientCorePopulated_AdmissionsCorePopulated", Storage="_AdmissionsCorePopulateds", ThisKey="PatientID", OtherKey="PatientID")]
		public EntitySet<AdmissionsCorePopulated> AdmissionsCorePopulateds
		{
			get
			{
				return this._AdmissionsCorePopulateds;
			}
			set
			{
				this._AdmissionsCorePopulateds.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_AdmissionsCorePopulateds(AdmissionsCorePopulated entity)
		{
			this.SendPropertyChanging();
			entity.PatientCorePopulated = this;
		}
		
		private void detach_AdmissionsCorePopulateds(AdmissionsCorePopulated entity)
		{
			this.SendPropertyChanging();
			entity.PatientCorePopulated = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.AdmissionsDiagnosesCorePopulate")]
	public partial class AdmissionsDiagnosesCorePopulate
	{
		
		private System.Guid _PatientID;
		
		private int _AdmissionID;
		
		private string _PrimaryDiagnosisCode;
		
		private string _PrimaryDiagnosisDescription;
		
		public AdmissionsDiagnosesCorePopulate()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PatientID", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid PatientID
		{
			get
			{
				return this._PatientID;
			}
			set
			{
				if ((this._PatientID != value))
				{
					this._PatientID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AdmissionID", DbType="Int NOT NULL")]
		public int AdmissionID
		{
			get
			{
				return this._AdmissionID;
			}
			set
			{
				if ((this._AdmissionID != value))
				{
					this._AdmissionID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PrimaryDiagnosisCode", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string PrimaryDiagnosisCode
		{
			get
			{
				return this._PrimaryDiagnosisCode;
			}
			set
			{
				if ((this._PrimaryDiagnosisCode != value))
				{
					this._PrimaryDiagnosisCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PrimaryDiagnosisDescription", DbType="VarChar(250) NOT NULL", CanBeNull=false)]
		public string PrimaryDiagnosisDescription
		{
			get
			{
				return this._PrimaryDiagnosisDescription;
			}
			set
			{
				if ((this._PrimaryDiagnosisDescription != value))
				{
					this._PrimaryDiagnosisDescription = value;
				}
			}
		}
	}
}
#pragma warning restore 1591
